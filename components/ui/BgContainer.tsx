import { Colors } from "@/constants/Colors";
import AsyncStorage from "@react-native-async-storage/async-storage";
import { BlurView } from "expo-blur";
import React, { useEffect, useState } from "react";
import {
  ImageBackground,
  Modal,
  SafeAreaView,
  ScrollView,
  StyleSheet,
  Text,
  TextInput,
  TouchableOpacity,
  View,
} from "react-native";
import UserDetails from "./UserDetails";
const USER_KEY = "userDetails";

export default function BgContainer({ children, userDetails }: any) {
  const [user, setUser] = useState<any>(null);

  const [modalVisible, setModalVisible] = useState(false);
  const [username, setUsername] = useState("");

  useEffect(() => {
    const checkUser = async () => {
      try {
        const storedUser = await AsyncStorage.getItem(USER_KEY);
        if (storedUser) {
          setUser(JSON.parse(storedUser));
        } else {
          setModalVisible(true);
        }
      } catch (e) {
        // handle error
        setModalVisible(true);
      }
    };
    checkUser();
  }, []);
  const handleSave = async () => {
    if (username.trim().length === 0) return;
    const userData = { username };
    await AsyncStorage.setItem(USER_KEY, JSON.stringify(userData));
    setUser(userData);
    setModalVisible(false);
  };
  return (
    <ImageBackground
      // Code Generated by Sidekick is for learning and experimentation purposes only.
      source={require("@/assets/images/blurry-bg.png")}
      style={styles.background}
      resizeMode="cover"
    >
      <SafeAreaView style={styles.pageContainer}>
        <BlurView intensity={10} tint="dark" style={StyleSheet.absoluteFill} />

        <ScrollView
          style={{
            marginBottom: 60,
          }}
        >
          {user && (
            <>
              <UserDetails userName={user.username} />
              {children}
            </>
          )}

          <Modal
            visible={modalVisible}
            transparent={true}
            animationType="slide"
            onRequestClose={() => {}}
          >
            <View style={styles.modalBackground}>
              <View style={styles.modalContainer}>
                <Text style={{ color: Colors.dark.text }}>
                  Enter your username:
                </Text>
                <TextInput
                  style={styles.input}
                  value={username}
                  onChangeText={setUsername}
                  placeholder="Username"
                  placeholderTextColor="#ccc"
                />
                <TouchableOpacity style={styles.button} onPress={handleSave}>
                  <Text
                    style={{ textAlign: "center", color: Colors.dark.text }}
                  >
                    Submit
                  </Text>
                </TouchableOpacity>
              </View>
            </View>
          </Modal>
        </ScrollView>
      </SafeAreaView>
    </ImageBackground>
  );
}

const styles = StyleSheet.create({
  background: {
    flex: 1,
    width: "100%",
    height: "100%",
  },
  pageContainer: {
    flex: 1,
    paddingHorizontal: 20,
  },
  modalBackground: {
    flex: 1,
    backgroundColor: "rgba(0,0,0,0.5)",
    justifyContent: "center",
    alignItems: "center",
  },
  modalContainer: {
    width: 300,
    padding: 20,
    backgroundColor: Colors.dark.cardColor,
    borderRadius: 10,
    elevation: 5,
  },
  input: {
    borderWidth: 1,
    borderColor: Colors.dark.foreground,
    color: Colors.dark.text,
    marginVertical: 10,
    padding: 8,
    borderRadius: 5,
  },
  button: {
    backgroundColor: "#1db954",
    paddingVertical: 10,
    // paddingHorizontal: 12,
    borderRadius: 4,
  },
});
